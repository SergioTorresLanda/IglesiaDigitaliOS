//
//  SacramentsViewController.swift
//  EncuentroCatolicoServices
//
//  Created Desarrollo on 30/04/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class SacramentsViewController: UIViewController, SacramentsViewProtocol {
   
    @IBOutlet weak var customNavBar: UIView!
    @IBOutlet weak var table: UITableView! 

    var presenter: SacramentsPresenterProtocol?
    let viewBundle = Bundle.init(identifier: "mx.arquidiocesis.EncuentroCatolicoServices")
    let alert = UIAlertController(title: "", message: "\n \n \n \n \nCargando...", preferredStyle: .alert)
    var options: Sacraments = []
    
	override func viewDidLoad() {
        super.viewDidLoad()
        table.delegate = self
        table.dataSource = self
        table.register(UINib(nibName: "OptionCell", bundle: viewBundle), forCellReuseIdentifier: "optionCell")
        showLoading()
        presenter?.getSacraments()
        customNavBar.layer.cornerRadius = 20
        customNavBar.layer.maskedCorners = [.layerMinXMaxYCorner, .layerMaxXMaxYCorner]
        customNavBar.ShadowNavBar()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        print("VC ECServices - SacramentsVC ")
    }
    
    func showLoading(){
        let imageView = UIImageView(frame: CGRect(x: 100, y: 15, width: 80, height: 80))//mitad es en 145dp
        imageView.image = UIImage(named: "iconoIglesia3", in: viewBundle, compatibleWith: nil)
        alert.view.addSubview(imageView)
        self.present(alert, animated: false, completion: nil)
    }
    
    func mostrarMSG(dtcAlerta: [String : String]) {
        alert.dismiss(animated: false, completion: {
            DispatchQueue.main.asyncAfter(deadline: .now() + 1, execute: {
                self.alert.dismiss(animated: true, completion: nil)
            })
            let alerta = UIAlertController(title: dtcAlerta["titulo"], message: dtcAlerta["cuerpo"], preferredStyle: .alert)
            alerta.addAction(UIAlertAction(title: "Aceptar", style: .default, handler: nil))
            self.present(alerta, animated: true, completion: nil)
        })
    }
    
    func loadOptions(data: Sacraments) {
        options = data
        self.table.reloadData()
        alert.dismiss(animated: false, completion: nil)
    }
    
    @IBAction func close(_ sender: Any){
        self.navigationController?.popViewController(animated: true)
    }
}

extension SacramentsViewController: UITableViewDelegate, UITableViewDataSource{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return options.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = table.dequeueReusableCell(withIdentifier: "optionCell", for: indexPath) as! OptionCell
        let cellData = options[indexPath.row]
        cell.lblTitle.text = cellData.name
        cell.accessibilityHint = "NONE"
        cell.accessibilityLabel = cellData.file
        cell.selectionStyle = UITableViewCell.SelectionStyle.none
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 55.0
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let cell = table.cellForRow(at: indexPath) as! OptionCell
        switch cell.accessibilityHint {
        case "NONE":
            let view = WebViewViewController(nibName: "WebViewViewController", bundle: viewBundle)
            view.screenURL = cell.accessibilityLabel
            self.navigationController?.pushViewController(view, animated: true)
        default:
            print("defaul case")
        }
    }
}
