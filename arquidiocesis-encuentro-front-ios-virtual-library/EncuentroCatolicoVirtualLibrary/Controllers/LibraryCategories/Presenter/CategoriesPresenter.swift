//
//  CategoriesPresenter.swift
//  EncuentroCatolicoVirtualLibrary
//
//  Created Desarrollo on 20/04/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class CategoriesPresenter: CategoriesPresenterProtocol {
    weak private var view: CategoriesViewProtocol?
    var interactor: CategoriesInteractorProtocol?
    private let router: CategoriesWireframeProtocol

    init(interface: CategoriesViewProtocol, interactor: CategoriesInteractorProtocol?, router: CategoriesWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getContentByCategory(category: String) {
        interactor?.requestContentByCategory(category: category)
    }
    
    func getContentWithFilter(filter: String){
        interactor?.requestContentWithFilter(filter: filter)
    }
    
    func getResponse(errores: ServerErrors, data: LibraryCategories?) {
        DispatchQueue.main.async {
            switch errores {
            case .ErrorInterno:
                let msg = ["titulo":"Error", "cuerpo": "Error en el servidor"]
                self.view?.mostrarMSG(dtcAlerta: msg)
            case .ErrorServidor:
                let msg = ["titulo":"Error", "cuerpo": "Error en la aplicación"]
                self.view?.mostrarMSG(dtcAlerta: msg)
            case .OK:
                self.view?.loadContentByCategory(data: data!)
            }
        }
    }

}
