//
//  InitViewViewController.swift
//  zeus-ios-sdk-new-social-network
//
//  Created Miguel Angel Vicario Flores on 14/10/20.
//  Copyright © 2020 Gabriel Briseño. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Alamofire
import RealmSwift

public struct GroupsAll: Codable {
    let FIIDEMPLEADO: Int
}

public class InitViewViewController: UIViewController, InitViewViewProtocol {

    var presenter: InitViewPresenterProtocol?
    
    //MARK: - @IBOutlets
    @IBOutlet public weak var progressBar: UIProgressView!
    
    //MARK: - Properties
    private var snService = SocialNetworkService()
    private var genAlert = GenericAlert()
    private var vcWasShowed = false

    //MARK: - Life cycle
    override public func viewDidLoad() {
        super.viewDidLoad()
        
        setUpView()
    }
    
    override public func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        loadNavigationController()
    }
    
     override public func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        
        fetchReactions()
    }
    
    override public func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        
        navigationController?.setNavigationBarHidden(true, animated: true)
    }
    
    func loadNavigationController() {
//        navigationController?.isNavigationBarHidden = false
//        navigationController?.navigationItem.hidesBackButton = true
//        navigationItem.leftBarButtonItems = UINavigationItem.setupNavigationBarWithBackButton(withBackTitle: "",
//                                                                                              withTarget: self,
//                                                                                              withAction: #selector(backPressed))
//        navigationItem.setupNavigationBarWith(centralTitle: "",
//                                              textSize: UIFont.systemFontSize+2,
//                                              tintColor: .black,
//                                              navBarColor: .white,
//                                              referenceToViewController: self)
    }
    
    @objc func backPressed() {
//        RealmManager.clearDataBase()
        navigationController?.popViewController(animated: true)
    }
    
    //MARK: - Methods()
    private func setUpView() {
        storedData.skip = 0
    }
    
    private func showNextView() {
        if !vcWasShowed {
            vcWasShowed = true
            progressBar.progress = 1.0
            let baseTabBar = SocialNetworkController(nibName: "SocialNetworkController", bundle: Bundle(for: SocialNetworkController.self))
            navigationController?.pushViewController(baseTabBar, animated: true)
        }
    }
    
    private func fetchReactions() {
        progressBar.progress = 0.25
        let request = snService.getRequestWOP(method: .reactionsAll)
        snService.makeRequest(request: request) { [weak self] (data, error) in
            if error != nil {
                self?.showAlert()
            } else {
                do {
                    let result = try JSONDecoder().decode(Reactions.self, from: data!)
                    
                    RealmManager.addToDataBase(result)
                    
                    self?.progressBar.progress = 0.5
                    self?.fetchGroups()
                    
                } catch {
                    self?.showAlert()
                }
            }
        }
    }
    
    private func fetchGroups() {
        progressBar.progress = 0.75
        let params = GroupsAll(FIIDEMPLEADO: 100)
        let request = snService.getRequestWP(method: .groupsAll, params: params)
        snService.makeRequest(request: request) { [weak self] (data, error) in
            if error != nil {
                self?.showAlert()
            } else {
                do {
                    let json = try JSONSerialization.jsonObject(with: data!, options: .fragmentsAllowed) as? [String: Any]
                    guard let message = json?["message"] as? String, message == "My Groups", let data = json?["data"] as? [[String: Any]] else {
                        self?.showAlert()
                        return
                    }

                    let groupsData = try JSONSerialization.data(withJSONObject: data, options: .fragmentsAllowed)
                    let result = try JSONDecoder().decode(Groups.self, from: groupsData)
                    
                    RealmManager.addToDataBase(result)
                        
                    self?.progressBar.progress = 0.9
                    self?.showNextView()

                } catch {
                    self?.showAlert()
                }
            }
        }
    }
    
    private func showAlert() {
        genAlert = GenericAlert(frame: CGRect(x: 0, y: 0, width: self.view.frame.width, height: self.view.frame.height))
        genAlert.errorMessageLabel.text = "No se ha podido descargar los archivos necesarios para iniciar Red Social."
        genAlert.okButton.addTarget(self, action: #selector(removeAlert), for: .touchUpInside)
        self.view.addSubview(genAlert)
    }
    
    @objc private func removeAlert(_ sender: UIButton) {
        genAlert.removeFromSuperview()
    }

}
