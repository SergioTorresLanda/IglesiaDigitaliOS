//
//  PaymentViewController.swift
//  zeus-ios-sdk-payment
//
//  Created Gabriel Briseño on 06/10/20.
//  Copyright © 2020 Gabriel Briseño. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PaymentViewController: UIViewController, PaymentViewProtocol {
	var presenter: PaymentPresenterProtocol?
    var loader: UILoader?

	override func viewDidLoad() {
        super.viewDidLoad()
        
        print("=======Cifrado =======")
        let strToCipher = """
{"monto":"0000000000000.50","cuentaOperacionRetiro":"01720101213710","codigoDivisa":"MXP","codigoOperacionDeposito":"160","descripcionOperacionRetiro":"RETIRO PRUEBA","cuentaOperacionDeposito":"01720108128331","descripcionOperacionDeposito":"DESPOSITO PRUEBA","codigoOperacionRetiro":"169","campoLibre":""}
"""
        print(CipherUtil.encryptJSON(text: strToCipher) ?? "Sin strToCipher")
        print("=======Cifrado =======")
        showShimmer()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        print("VC ECPayment - PaymentVC ")
    }
    
    func showShimmer() {
        if loader == nil {
            loader = UILoader(superviewForIndicatorActivity: view)
        }
        
        view.addSubview(loader!)
        loader?.start()
        
        Timer.scheduledTimer(withTimeInterval: 7, repeats: false) { [weak self] (_) in
            self?.loader?.stop()
        }
    }
    
    func didFinishWithSuccess() {
        
    }
    
    func didFinishWith(error: String) {
        let msg = error == kNoInternet ? "Asegurate de tener conexión a internet" : "Ocurrió un error"
        let alertC = UIAlertController(title: "Aviso:", message: msg, preferredStyle: .alert)
        alertC.addAction(UIAlertAction(title: "Entendido", style: .default, handler: nil))
        present(alertC, animated: true, completion: nil)
    }
    
    override func motionEnded(_ motion: UIEvent.EventSubtype, with event: UIEvent?) {
        if motion == .motionShake {
            let alertC = UIAlertController(title: "Aviso:", message: "#DEBUG:", preferredStyle: .alert)
            alertC.addTextField { (textF) in
                textF.placeholder = "Digite su número de cuenta"
                textF.borderStyle = .roundedRect
                textF.keyboardType = .numberPad
            }
            alertC.addAction(UIAlertAction(title: "Confirmar", style: .default, handler: { [weak self] (_) in
                let text = alertC.textFields?.first?.text ?? ""
                print(text)
                self?.showShimmer()
            }))
            alertC.addAction(UIAlertAction(title: "Cancelar", style: .cancel, handler: nil))
            present(alertC, animated: true, completion: nil)
        }
    }
}
