//
//  LiveViewController.swift
//  EncuentroCatolicoLive
//
//  Created Diego Martinez on 25/02/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import EncuentroCatolicoMyChurch
import EncuentroCatolicoNewFormation

class LiveViewController: UIViewController, LiveViewProtocol {

    @IBOutlet weak var tableFeed        : UICollectionView!
    @IBOutlet weak var imgFeatured      : UIImageView!
    @IBOutlet weak var dotView          : UIView!
    @IBOutlet weak var btnMisas         : UIButton!
    @IBOutlet weak var subTitFeatured: UILabel!
    @IBOutlet weak var titleFeatured: UILabel!
    
// MARK: NEW IBOUTLETS -
    @IBOutlet weak var customNavBar: UIView!
    @IBOutlet weak var lblNavBarTitle: UILabel!
    @IBOutlet weak var backIcon: UIImageView!
    @IBOutlet weak var mainTitleLbl: UILabel!
    @IBOutlet weak var mainCollectionV: UICollectionView!
    
    let alert = UIAlertController(title: "", message: "\n \n \n \n \nCargando...", preferredStyle: .alert)
    var tempImages: [Int:UIImage] = [:]
    //var arrayFeatured : [FeaturedContet] = []
    var allData: [LiveModel] = []
    var urlFeatured = ""
    var titleStrFt = ""
    var subTitFtStr = ""
    var arrayDummy = ["", "", "", "", ""]
    
	var presenter: LivePresenterProtocol?
    var tblTitles: [String] = ["Basílica de Guadalupe A.R.",
                               "Basílica de Guadalupe A.R.",
                               "Desde la fe",
                               "Arquidiócesis de México",
                               "San Agus Polanco",
                               "Universidad Pontificia de México",
                               "Universidad Pontificia de México"]
    var tblSubtitle: [String] = ["VIII Charla Espiritual con el M. Iltre. Sr. Canónigo Mons. Dr. Enrique Glennie Graue",
                                 "Misa por Valentina Carlota Durán de López, Difunta ",
                                 "¿Cómo rezar la Coronilla de la Divina Misericordia?",
                                 "Oración por la Jornada del Migrante y del Refugiado 2020",
                                 "Parroquia de San Agustín, Polanco. Valuartes de la fe.",
                                 "UPM Institucional",
                                 "Sacramentorum Sanctis Tutela"]
    var tblLinks: [String] = ["https://www.youtube.com/watch?v=PqphR_25RD4", "https://www.youtube.com/watch?v=cVehyNfuwQc", "https://www.youtube.com/watch?v=s814et4cMBc",  "https://www.youtube.com/watch?v=ZOe2Bcf3RdM", "https://www.youtube.com/watch?v=OwDYuUY4C_4", "https://www.youtube.com/watch?v=_3wkzH63-Ao", "https://www.youtube.com/watch?v=S5SisCCspao"]
        
// MARK: LIFE CYCLE VIEW FUNCTIONS -
	override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        setupCollection()
        setupViewALert()
        setupGetsures()
//        tblTitles.removeAll()
//        tblSubtitle.removeAll()
//        tblLinks.removeAll()
        presenter?.getData()
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        print("VC ECLive - LiveVC")
    }
    
    func loadContent(data: [LiveModel]) {
        print("^^", data)
        allData = data
        mainCollectionV.reloadData()
        alert.dismiss(animated: true, completion: nil)
    }
    
    func failRequestData(message: String) {
        print(message)
    }
    
    func successUpdateStreaming() {
        print("¬ Success")
    }
    
    func failUpdateSucces() {
        print("")
    }
    
// MARK: SETUP FUNCTIONS -
    func setupViewALert() {
        let imageView = UIImageView(frame: CGRect(x: 100, y: 15, width: 80, height: 80))//mitad es en 145dp
        imageView.image = UIImage(named: "iconoIglesia3", in: Bundle.local, compatibleWith: nil)
        alert.view.addSubview(imageView)
        self.present(alert, animated: false, completion: nil)
    }
    
    func setupView() {
        tableFeed.dataSource = self
        tableFeed.delegate = self
        tableFeed.register(UINib(nibName: "EventsCVC", bundle: Bundle.local), forCellWithReuseIdentifier: "EventsCVC")
        imgFeatured.layer.cornerRadius = 10
        btnMisas.layer.cornerRadius = 10
        imgFeatured.clipsToBounds = true
        titleFeatured.text = titleStrFt
        subTitFeatured.text = subTitFtStr
        
        let youtubeURL = urlFeatured.getYouTubeThubnailFromURL()
        DispatchQueue.global(qos: .background).async {
            let url = URL(string: youtubeURL)
            let data = try? Data(contentsOf: (url ?? URL(string: "www.com"))!)
            
            let image: UIImage = UIImage(data: data ?? Data()) ?? UIImage()
            DispatchQueue.main.async {
                self.imgFeatured.image = image
                self.imgFeatured.contentMode = .scaleToFill
            }
        }
        
        dotView.layer.cornerRadius = dotView.frame.size.width/2
        UIView.animate(withDuration: 0.4) {
            self.alert.dismiss(animated: true, completion: nil)
        }
        
    }
    
// MARK: @IBACTIONS -
    @IBAction private func openFeatured(_ sender: UIButton) {
        guard let url = URL(string: urlFeatured) else { return }
        let view = BrowserViewController(nibName: "BrowserViewController", bundle: Bundle.local)
        view.screenURL = url.absoluteString.embedAndPlayYoutubeURL()
        self.navigationController?.pushViewController(view, animated: true)
    }

    @IBAction private func popView(_ sender: UIButton) {
        _ = navigationController?.popViewController(animated: true)
    }
    
    @IBAction private func openMasses(_ sender: UIButton) {
        let view = MassesListRouter.createModule()
        self.navigationController?.pushViewController(view, animated: true)
    }

}

// MARK: EXTENSIONS -
extension String{
    func embedAndPlayYoutubeURL() -> String{
        if self.contains("youtube"){
            return self.replacingOccurrences(of: "watch?v=", with: "embed/") + "?autoplay=1"
        }else{
            return self
        }
    }
    
    func embedYoutubeURL() -> String{
        if self.contains("youtube"){
            return self.replacingOccurrences(of: "watch?v=", with: "embed/")
        }else{
            return self
        }
    }
    
    func getYouTubeThubnailFromURL() -> String{
        var videoID = ""
        videoID = self.replacingOccurrences(of: "https://www.youtube.com/watch?v=", with: "")
        if self.contains("&list="){
            let array = videoID.components(separatedBy: "&list=")
            if array.count > 0{
                videoID = array[0]
                videoID = "https://img.youtube.com/vi/\(videoID)/0.jpg"
                return videoID
            }else{
                return self
            }
        }else{
            videoID = "https://img.youtube.com/vi/\(videoID)/0.jpg"
            return videoID
        }
    }
}

// MARK: NEW FUNCTIONS -
extension LiveViewController {
    
    private func setupUI() {
        customNavBar.layer.cornerRadius = 20
        customNavBar.ShadowNavBar()
    }
    
    private func setupCollection() {
        mainCollectionV.register(UINib(nibName: "streamingCollectionCell", bundle: Bundle.local), forCellWithReuseIdentifier: "STREAMINGCELL")
        mainCollectionV.delegate = self
        mainCollectionV.dataSource = self
        
    }
    
    private func setupGetsures() {
        let tapBack = UITapGestureRecognizer(target: self, action: #selector(TapBack))
        backIcon.addGestureRecognizer(tapBack)
    }
    
    @objc func TapBack() {
        self.navigationController?.popViewController(animated: true)
    }
    
}
