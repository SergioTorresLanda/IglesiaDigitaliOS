//
//  NotificationsRouter.swift
//  zeus-ios-sdk-new-social-network
//
//  Created Diego Martinez on 01/09/20.
//  Copyright © 2020 Gabriel Briseño. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import RealmSwift

class NotificationsRouter: NSObject, NotificationsWireframeProtocol {
    
    weak var viewController: UIViewController?
    
    static func createModule() -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = NotificationsViewController(nibName: "NotificationsViewController", bundle: Bundle.local)
        let interactor = NotificationsInteractor()
        let router = NotificationsRouter()
        let presenter = NotificationsPresenter(interface: view, interactor: interactor, router: router)
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }
    
    //MARK: - ShowModalDelete
     func showModalDelete() {
         let vc = NotificationsModalRouter.createModule() as! NotificationsModalViewController
         vc.modalPresentationStyle = .custom
         vc.transitioningDelegate = self
         viewController?.present(vc, animated: true)
     }
    
    //MARK: - ShowPostDetail
    func showPostDetail(navController: UINavigationController?, post: PublicationRealm) {
        let vc = DetailPostRouter.createModule() as! DetailPostViewController
        vc.post = post
        navController?.pushViewController(vc, animated: true)
    }
}

//MARK: - UIViewControllerTransitioningDelegate
extension NotificationsRouter: UIViewControllerTransitioningDelegate {
    public func presentationController(forPresented presented: UIViewController, presenting: UIViewController?, source: UIViewController) -> UIPresentationController? {
        ModalPresentationController(presentedViewController: presented, presenting: presenting)
    }
}
