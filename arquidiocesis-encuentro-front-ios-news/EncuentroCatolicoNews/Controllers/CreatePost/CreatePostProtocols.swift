//
//  CreatePostProtocols.swift
//  zeus-ios-sdk-new-social-network
//
//  Created Diego Martinez on 01/09/20.
//  Copyright © 2020 Gabriel Briseño. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

//MARK: Wireframe -
protocol CreatePostWireframeProtocol: class {
    
}

//MARK: Presenter -
protocol CreatePostPresenterProtocol: class {
    
    //MARK: - Post
    func makePost(content: String, location: LocationsResult?, feeling: FeelingsResult?, media: [MediaData], organizationId: Int,
                  asParam: String)
    func didFinishMakingPost()
    func didFinishMakingPostWithErrors(error: SocialNetworkErrors)
    
    func newmakePost(content: String, location: LocationsResult?, feeling: FeelingsResult?, media: [MediaData], organizationId: Int?, asParam: Int, editPost: Bool, scope: Int)
    
    func editMakePost(content: String, media: [MediaData], organizationID: Int, statusId: Int, editPost: Bool, postId: Int)
    
    func requestRelations(SNId: Int)
    func onSuccessGetRelations(data: RelationsData, response: HTTPURLResponse)
    func onFailGetRelation(error: Error)
    
    func editComment(idComment: Int, commentString: String)
    func onSuccessEditComment(data: ResultEditComment, response: HTTPURLResponse)
    func onFailEditComment(error: Error)    
}

//MARK: Interactor -
protocol CreatePostInteractorProtocol: class {
    
    var presenter: CreatePostPresenterProtocol?  { get set }
    
    //MARK: - Post
    func makePost(content: String, location: LocationsResult?, feeling: FeelingsResult?, media: [MediaData], organizationId: Int,
                  asParam: String)
    
    func newmakePost(content: String, location: LocationsResult?, feeling: FeelingsResult?, media: [MediaData], organizationId: Int?, asParam: Int, editPost: Bool, scope: Int)
    
    func editMakePost(content: String, media: [MediaData], organizationID: Int, statusId: Int, editPost: Bool, postId: Int)
    
    func getRelations(SNId: Int)
    
    func editComment(idComment: Int, commentContent: String)
    
}

//MARK: View -
protocol CreatePostViewProtocol: class {
    
    var presenter: CreatePostPresenterProtocol?  { get set }
    
    //MARK: - Post
    func didFinishMakingPost()
    func didFinishMakingPostWithErrors(error: SocialNetworkErrors)
    func successGetRelations(data: RelationsData) 
    func failGetRelations(mesage: String)
    
    func successEditComment(data: ResultEditComment)
    func failEditComment(message: String)
    
    
}
