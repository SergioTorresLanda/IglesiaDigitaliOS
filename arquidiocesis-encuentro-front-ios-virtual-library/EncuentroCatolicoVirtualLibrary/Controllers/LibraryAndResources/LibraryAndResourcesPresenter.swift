//
//  LibraryAndResourcesPresenter.swift
//  EncuentroCatolicoVirtualLibrary
//
//  Created Desarrollo on 15/04/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class LibraryAndResourcesPresenter: LibraryAndResourcesPresenterProtocol {

    weak private var view: LibraryAndResourcesViewProtocol?
    var interactor: LibraryAndResourcesInteractorProtocol?
    private let router: LibraryAndResourcesWireframeProtocol

    init(interface: LibraryAndResourcesViewProtocol, interactor: LibraryAndResourcesInteractorProtocol?, router: LibraryAndResourcesWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    
    func getContentByID(contentID: Int) {
        interactor?.requestContentDetail(contentID: contentID)
    }
    
    func getResponse(errores: ServerErrors, data: ContentDetail?) {
            DispatchQueue.main.async {
                switch errores {
                case .ErrorInterno:
                    let msg = ["titulo":"Error", "cuerpo": "Error en el servidor"]
                    self.view?.mostrarMSG(dtcAlerta: msg)
                case .ErrorServidor:
                    let msg = ["titulo":"Error", "cuerpo": "Error en la aplicación"]
                    self.view?.mostrarMSG(dtcAlerta: msg)
                case .OK:
                    self.view?.loadContentDetail(data: data!)
                }
            }
    }
    
    
    
}
