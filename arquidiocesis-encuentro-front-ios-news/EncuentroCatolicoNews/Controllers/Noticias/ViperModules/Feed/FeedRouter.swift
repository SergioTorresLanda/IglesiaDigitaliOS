//
//  FeedRouter.swift
//  zeus-ios-sdk-new-social-network
//
//  Created Miguel Angel Vicario Flores on 01/09/20.
//  Copyright © 2020 Gabriel Briseño. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import RealmSwift

open class FeedRouter: NSObject, FeedWireframeProtocol {

    weak var viewController: UIViewController?
    
    public static func createModule() -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = FeedViewController(nibName: "FeedViewController", bundle: Bundle(for: FeedViewController.self))
        let interactor = FeedInteractor()
        let router = FeedRouter()
        let presenter = FeedPresenter(interface: view, interactor: interactor, router: router)
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }
    
    //MARK: - ShowPostDetail
    func showPostDetail(navController: UINavigationController?, post: PublicationRealm) {
        let vc = DetailPostRouter.createModule() as! DetailPostViewController
        vc.post = post
        navController?.pushViewController(vc, animated: true)
    }
    
    //MARK: - ShowComments
//    func showComments(postId: Int) {
//        let vc = CommentsRouter.createModule() as! CommentsViewController
//        vc.postId = postId
//        vc.isKBFocused = false
//        vc.modalPresentationStyle = .custom
//        vc.transitioningDelegate = self
//        viewController?.present(vc, animated: true)
//    }
    
    //MARK: - ShowEditPost
//    func showEditPost(postId: Int, content: String, nombreGrupo: String, imagenGrupo: String) {
//        let vc = EditPostModalRouter.createModule() as! EditPostModalViewController
//        vc.postId = postId
//        vc.content = content
//        vc.groupName = nombreGrupo
//        vc.groupImage = imagenGrupo
//        vc.modalPresentationStyle = .custom
//        vc.transitioningDelegate = self
//        viewController?.present(vc, animated: true)
//    }
    
    //MARK: - ShowWhoPublishes
//    func showWhoPublishes() {
//        let groups = retrieveFromRealm()
//        
//        guard let userGroups = groups else { return }
//        if userGroups.count > 1 {
//            let vc = WhoPublishesRouter.createModule() as! WhoPublishesViewController
//            vc.groupsRealm = groups
//            vc.modalPresentationStyle = .fullScreen
//            viewController?.present(vc, animated: true)
//        } else {
////            let vc = CreatePostRouter.createModule() as! CreatePostViewController
////            vc.hasManyGroups = false
////            vc.group = userGroups.first ?? nil
////            vc.modalPresentationStyle = .fullScreen
////            viewController?.present(vc, animated: true)
//        }
//    }
    
    //MARK: - Methods
    private func retrieveFromRealm() -> [GroupRealm]? {
        let results = RealmManager.fetchData(object: GroupRealm.self)
        return results
    }
}

//MARK: - UIViewControllerTransitioningDelegate
extension FeedRouter: UIViewControllerTransitioningDelegate {
    public func presentationController(forPresented presented: UIViewController, presenting: UIViewController?, source: UIViewController) -> UIPresentationController? {
        ModalPresentationController(presentedViewController: presented, presenting: presenting)
    }
}
